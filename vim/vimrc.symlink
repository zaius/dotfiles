syntax enable
colorscheme ir_black

set smartindent
set autoindent
filetype plugin on
filetype indent on

" Get tabs to work well
set tabstop=2
set expandtab
set shiftwidth=2
" hilight tabs as errors
" syn match TAB_CHAR "\t"
" hi link TAB_CHAR Error

" have command-line completion <Tab> (for filenames, help topics, option names)
" first list the available options and complete the longest common part, then
" have further <Tab>s cycle through the possibilities:
set wildmode=list:longest,full

" display the current mode and partially-typed commands in the status line:
set showmode
set showcmd

" don't make it look like there are line breaks where there aren't:
set nowrap

" enable filetype detection:
filetype on

" make searches case-insensitive, unless they contain upper-case letters:
set ignorecase
set smartcase

" show the `best match so far' as search strings are typed:
set incsearch

" allow <BkSpc> to delete line breaks, beyond the start of the current
" insertion, and over indentations:
set backspace=eol,start,indent

" Always have the status bar on
set laststatus=2
set ruler

" Bounce the cursor off the opposite brace
set showmatch

" Fix my inability to use shift properly
map :W :w
map :Q :q
map :T :t

if has("gui_macvim")
  " Don't show the macvim toolbar. Who uses a mouse anyway?!
  set go-=T
  set guifont=Inconsolata:h15.00
  set anti

  " Make Macvim fullscreen actually fill screen
  set fuoptions=maxvert,maxhorz 
endif

" Tab navigation
map <C-k> :tabp<CR>
map <C-j> :tabn<CR>
nmap <C-S-tab> :tabprevious<cr>
nmap <C-tab> :tabnext<cr>
imap <C-S-tab> <ESC>:tabprevious<cr>i
imap <C-tab> <ESC>:tabnext<cr>i
nmap <C-t> :tabnew<cr>
imap <C-t> <ESC>:tabnew<cr>i
" can't use ctrl-w because it clashes with windows :(
" map <C-w> :tabclose<cr>
" And C-[ is used in place of escape in a bunch of places. Could probably get
" around this by changing the window title setting stuff.
" nmap <C-[> :tabprevious<cr>
" nmap <C-]> :tabnext<cr>


" Leader commands - so much cooler than function keys
let mapleader = ","
map <leader>p :set paste!<CR>:set paste?<CR>
map <Leader>, :NERDTreeToggle<cr>

" Set the screen window title to hold the currently edited file
let &titlestring = "vim(" . expand("%:t") . ")"
if &term == "screen"
  set t_ts=k
  set t_fs=\
endif
if &term == "screen" || &term == "xterm"
  set title
endif
