# vim: set ft=sh:

bold="\[$(tput bold)\]"
green="\[$(tput setaf 2)\]"
cyan="\[$(tput setaf 6)\]"
red="\[$(tput setaf 9)\]"
default="\[$(tput sgr0)\]"


export PAGER='less --quit-if-one-screen --ignore-case --LONG-PROMPT --RAW-CONTROL-CHARS'
export PATH=~/.dotfiles/bin:/usr/local/bin:$PATH

if [[ -d /Applications/Visual\ Studio\ Code.app/Contents/Resources/app/bin ]]; then
  export PATH=$PATH:/Applications/Visual\ Studio\ Code.app/Contents/Resources/app/bin
fi

export EDITOR=/usr/local/bin/vim


title() {
  echo -ne "\033]0;$@\007"
}
# preexec breaks fzf
# source ~/.dotfiles/preexec.bash
preexec () {
  title $@
}
precmd () {
  title 'bash'
}

fromhex(){
    hex=${1#"#"}
    r=$(printf '0x%0.2s' "$hex")
    g=$(printf '0x%0.2s' ${hex#??})
    b=$(printf '0x%0.2s' ${hex#????})
    printf '%03d' "$(( (r<75?0:(r-35)/40)*6*6 +
                       (g<75?0:(g-35)/40)*6   +
                       (b<75?0:(b-35)/40)     + 16 ))"
}

function build_prompt() {
    local EXIT="$?"
    PS1="$bold"
    if [ $EXIT != 0 ]; then
        PS1+="$red$EXIT "
    fi
    PS1+="$green\u$red@$cyan\H:$red\w$default\$ "
}

export PROMPT_COMMAND=build_prompt
# preexec overrides PROMPT_COMMAND - make sure it's called after.
# preexec_install

# Case-insensitive tab complete
bind 'set completion-ignore-case on'



## COMPLETIONS

if [ -d /usr/local/etc/bash_completion.d ]; then
  for file in /usr/local/etc/bash_completion.d/*; do
    source $file
  done
fi

[[ -r "/usr/local/etc/profile.d/bash_completion.sh" ]] && . "/usr/local/etc/profile.d/bash_completion.sh"

# TODO: move these into .dotfiles
if [ -f '/Users/zaius/Downloads/google-cloud-sdk/path.bash.inc' ]; then
  source '/Users/zaius/Downloads/google-cloud-sdk/path.bash.inc'
fi

if [ -f '/Users/zaius/Downloads/google-cloud-sdk/completion.bash.inc' ]; then
  source '/Users/zaius/Downloads/google-cloud-sdk/completion.bash.inc'
fi


## ALIASES

alias gs="git status"
alias gd="git diff --color-moved"
alias gp="git push origin HEAD"
alias glog="git log --graph --pretty=format:'%C(red)%h%C(reset) %<(8)%aN - %<(56,trunc)%s  %C(yellow)%ar'"
alias cdg='cd $(git rev-parse --show-cdup)'
alias gss="git add . && git commit --no-verify -m '-- PENDING --'"
function gsp() {
  last_msg=$(git log -1 --pretty=%B)
  if [[ $last_msg == "-- PENDING --" ]]; then
    git reset "HEAD^"
  else
    echo 'Error - last commit not a stash'
  fi
}

alias dc="docker-compose --file=docker-compose.direct.yml"

alias less="less --ignore-case --RAW-CONTROL-CHARS "
alias ls="ls -lG"

function ff() {
  find . -iname "*$@*"
}
alias fixterm='curl https://raw.githubusercontent.com/kovidgoyal/kitty/master/terminfo/x/xterm-kitty | sudo tee /usr/share/terminfo/x/xterm-kitty > /dev/null'

if which go > /dev/null; then
  export PATH=$PATH:/usr/local/opt/go/libexec/bin
  export GOPATH=$HOME/.go
fi


if which fzf > /dev/null; then
  # $(brew --prefix)/opt/fzf/install
  # [ -f ~/.fzf.bash ] && source ~/.fzf.bash
  source ~/.dotfiles/bash/fzf.bash
fi

export VIM_APP_DIR=/usr/local/Cellar/macvim/8.1-157


alias manage.py='\
  docker-compose \
    --file=docker-compose.direct.yml \
    run \
    --rm \
    -v ~/.ipython/:/root/.ipython \
    -v ~/response-log/:/beyond/response-log \
    uwsgi-beyond \
    /var/beyond/venv/bin/python /beyond/manage.py'

alias refresh-tags='ctags --exclude="@.gitignore" --python-kinds=-i -R .'
